name: Deploy ML Service to EC2

on:
  push:
    branches: [ before-image-processing-model, setting-up-an-EC2-Instance ]
    paths:
      - 'ml-service/**'
  pull_request:
    branches: [ before-image-processing-model, setting-up-an-EC2-Instance ]
    paths:
      - 'ml-service/**'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./ml-service
        file: ./ml-service/Dockerfile
        push: true
        tags: |
          sandaru71/velociroute-ml-service:latest
          sandaru71/velociroute-ml-service:${{ github.sha }}
    
    - name: Create docker-compose content
      run: |
        echo 'version: "3.8"

        services:
          ml-service:
            image: sandaru71/velociroute-ml-service:latest
            container_name: velociroute-ml-service
            ports:
              - "8000:8000"
            environment:
              - MODEL_DEVICE=cpu
              - BATCH_SIZE=1
              - HOST=0.0.0.0
              - PORT=8000
            restart: unless-stopped
            healthcheck:
              test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
              interval: 30s
              timeout: 10s
              retries: 3' > ml-service-compose.yml

    - name: Deploy to EC2
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USERNAME }}
        key: ${{ secrets.SSH_PRIVATE_KEY }}
        script: |
          cd ~/velociroute
          cat > ml-service/deploy/docker-compose.yml << 'EOL'
          version: "3.8"

          services:
            ml-service:
              image: sandaru71/velociroute-ml-service:latest
              container_name: velociroute-ml-service
              ports:
                - "8000:8000"
              environment:
                - MODEL_DEVICE=cpu
                - BATCH_SIZE=1
                - HOST=0.0.0.0
                - PORT=8000
              restart: unless-stopped
              healthcheck:
                test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
                interval: 30s
                timeout: 10s
                retries: 3
          EOL
          mkdir -p ml-service/deploy
          docker-compose -f ml-service/deploy/docker-compose.yml pull ml-service
          docker-compose -f ml-service/deploy/docker-compose.yml up -d ml-service
